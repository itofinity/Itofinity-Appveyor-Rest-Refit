/* 
 * AppVeyor REST API
 *
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * OpenAPI spec version: 0.20170106.0
 * Contact: team@appveyor.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Itofinity.Appveyor.Rest.Refit.Api;
using Itofinity.Appveyor.Rest.Refit.Model;
using Itofinity.Appveyor.Rest.Refit.Client;
using System.Reflection;

namespace Itofinity.Appveyor.Rest.Refit.Test
{
    /// <summary>
    ///  Class for testing UserAccount
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class UserAccountTests
    {
        // TODO uncomment below to declare an instance variable for UserAccount
        //private UserAccount instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of UserAccount
            //instance = new UserAccount();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UserAccount
        /// </summary>
        [Test]
        public void UserAccountInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" UserAccount
            //Assert.IsInstanceOfType<UserAccount> (instance, "variable 'instance' is a UserAccount");
        }

        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Test]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Updated'
        /// </summary>
        [Test]
        public void UpdatedTest()
        {
            // TODO unit test for the property 'Updated'
        }
        /// <summary>
        /// Test the property 'SuccessfulBuildNotification'
        /// </summary>
        [Test]
        public void SuccessfulBuildNotificationTest()
        {
            // TODO unit test for the property 'SuccessfulBuildNotification'
        }
        /// <summary>
        /// Test the property 'FailedBuildNotification'
        /// </summary>
        [Test]
        public void FailedBuildNotificationTest()
        {
            // TODO unit test for the property 'FailedBuildNotification'
        }
        /// <summary>
        /// Test the property 'NotifyWhenBuildStatusChangedOnly'
        /// </summary>
        [Test]
        public void NotifyWhenBuildStatusChangedOnlyTest()
        {
            // TODO unit test for the property 'NotifyWhenBuildStatusChangedOnly'
        }
        /// <summary>
        /// Test the property 'SuccessfulDeploymentNotification'
        /// </summary>
        [Test]
        public void SuccessfulDeploymentNotificationTest()
        {
            // TODO unit test for the property 'SuccessfulDeploymentNotification'
        }
        /// <summary>
        /// Test the property 'FailedDeploymentNotification'
        /// </summary>
        [Test]
        public void FailedDeploymentNotificationTest()
        {
            // TODO unit test for the property 'FailedDeploymentNotification'
        }
        /// <summary>
        /// Test the property 'NotifyWhenDeploymentStatusChangedOnly'
        /// </summary>
        [Test]
        public void NotifyWhenDeploymentStatusChangedOnlyTest()
        {
            // TODO unit test for the property 'NotifyWhenDeploymentStatusChangedOnly'
        }
        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Test]
        public void AccountIdTest()
        {
            // TODO unit test for the property 'AccountId'
        }
        /// <summary>
        /// Test the property 'AccountName'
        /// </summary>
        [Test]
        public void AccountNameTest()
        {
            // TODO unit test for the property 'AccountName'
        }
        /// <summary>
        /// Test the property 'IsOwner'
        /// </summary>
        [Test]
        public void IsOwnerTest()
        {
            // TODO unit test for the property 'IsOwner'
        }
        /// <summary>
        /// Test the property 'IsCollaborator'
        /// </summary>
        [Test]
        public void IsCollaboratorTest()
        {
            // TODO unit test for the property 'IsCollaborator'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Test]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'FullName'
        /// </summary>
        [Test]
        public void FullNameTest()
        {
            // TODO unit test for the property 'FullName'
        }
        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Test]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'Password'
        /// </summary>
        [Test]
        public void PasswordTest()
        {
            // TODO unit test for the property 'Password'
        }
        /// <summary>
        /// Test the property 'RoleId'
        /// </summary>
        [Test]
        public void RoleIdTest()
        {
            // TODO unit test for the property 'RoleId'
        }
        /// <summary>
        /// Test the property 'RoleName'
        /// </summary>
        [Test]
        public void RoleNameTest()
        {
            // TODO unit test for the property 'RoleName'
        }
        /// <summary>
        /// Test the property 'PageSize'
        /// </summary>
        [Test]
        public void PageSizeTest()
        {
            // TODO unit test for the property 'PageSize'
        }

    }

}
