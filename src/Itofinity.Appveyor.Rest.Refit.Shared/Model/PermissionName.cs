/* 
 * AppVeyor REST API
 *
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * OpenAPI spec version: 0.20170106.0
 * Contact: team@appveyor.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Itofinity.Appveyor.Rest.Refit.Model
{
    /// <summary>
    /// Available permission names.  The names correspond to the following groups: #### AccountPermission - ManageApplicationAuthorizations - UpdateAccountDetails - UpdateBillingDetails #### BuildEnvironmentPermission - ConfigureBuildEnvironment #### EnvironmentsPermission - DeployToEnvironment - ManageEnvironments - UpdateEnvironmentSettings #### ProjectsPermission - ManageProjects - RunProjectBuild - UpdateProjectSettings #### RolesPermission - AddRole - DeleteRole - UpdateRoleDetails #### UserPermission - ConfigureApiKeys #### UsersPermission - AddUser - DeleteUser - UpdateUserDetails 
    /// </summary>
    /// <value>Available permission names.  The names correspond to the following groups: #### AccountPermission - ManageApplicationAuthorizations - UpdateAccountDetails - UpdateBillingDetails #### BuildEnvironmentPermission - ConfigureBuildEnvironment #### EnvironmentsPermission - DeployToEnvironment - ManageEnvironments - UpdateEnvironmentSettings #### ProjectsPermission - ManageProjects - RunProjectBuild - UpdateProjectSettings #### RolesPermission - AddRole - DeleteRole - UpdateRoleDetails #### UserPermission - ConfigureApiKeys #### UsersPermission - AddUser - DeleteUser - UpdateUserDetails </value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum PermissionName
    {
        
        /// <summary>
        /// Enum ManageApplicationAuthorizations for "ManageApplicationAuthorizations"
        /// </summary>
        [EnumMember(Value = "ManageApplicationAuthorizations")]
        ManageApplicationAuthorizations,
        
        /// <summary>
        /// Enum UpdateAccountDetails for "UpdateAccountDetails"
        /// </summary>
        [EnumMember(Value = "UpdateAccountDetails")]
        UpdateAccountDetails,
        
        /// <summary>
        /// Enum UpdateBillingDetails for "UpdateBillingDetails"
        /// </summary>
        [EnumMember(Value = "UpdateBillingDetails")]
        UpdateBillingDetails,
        
        /// <summary>
        /// Enum ConfigureBuildEnvironment for "ConfigureBuildEnvironment"
        /// </summary>
        [EnumMember(Value = "ConfigureBuildEnvironment")]
        ConfigureBuildEnvironment,
        
        /// <summary>
        /// Enum DeployToEnvironment for "DeployToEnvironment"
        /// </summary>
        [EnumMember(Value = "DeployToEnvironment")]
        DeployToEnvironment,
        
        /// <summary>
        /// Enum ManageEnvironments for "ManageEnvironments"
        /// </summary>
        [EnumMember(Value = "ManageEnvironments")]
        ManageEnvironments,
        
        /// <summary>
        /// Enum UpdateEnvironmentSettings for "UpdateEnvironmentSettings"
        /// </summary>
        [EnumMember(Value = "UpdateEnvironmentSettings")]
        UpdateEnvironmentSettings,
        
        /// <summary>
        /// Enum ManageProjects for "ManageProjects"
        /// </summary>
        [EnumMember(Value = "ManageProjects")]
        ManageProjects,
        
        /// <summary>
        /// Enum RunProjectBuild for "RunProjectBuild"
        /// </summary>
        [EnumMember(Value = "RunProjectBuild")]
        RunProjectBuild,
        
        /// <summary>
        /// Enum UpdateProjectSettings for "UpdateProjectSettings"
        /// </summary>
        [EnumMember(Value = "UpdateProjectSettings")]
        UpdateProjectSettings,
        
        /// <summary>
        /// Enum AddRole for "AddRole"
        /// </summary>
        [EnumMember(Value = "AddRole")]
        AddRole,
        
        /// <summary>
        /// Enum DeleteRole for "DeleteRole"
        /// </summary>
        [EnumMember(Value = "DeleteRole")]
        DeleteRole,
        
        /// <summary>
        /// Enum UpdateRoleDetails for "UpdateRoleDetails"
        /// </summary>
        [EnumMember(Value = "UpdateRoleDetails")]
        UpdateRoleDetails,
        
        /// <summary>
        /// Enum ConfigureApiKeys for "ConfigureApiKeys"
        /// </summary>
        [EnumMember(Value = "ConfigureApiKeys")]
        ConfigureApiKeys,
        
        /// <summary>
        /// Enum AddUser for "AddUser"
        /// </summary>
        [EnumMember(Value = "AddUser")]
        AddUser,
        
        /// <summary>
        /// Enum DeleteUser for "DeleteUser"
        /// </summary>
        [EnumMember(Value = "DeleteUser")]
        DeleteUser,
        
        /// <summary>
        /// Enum UpdateUserDetails for "UpdateUserDetails"
        /// </summary>
        [EnumMember(Value = "UpdateUserDetails")]
        UpdateUserDetails
    }

}
