/* 
 * AppVeyor REST API
 *
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * OpenAPI spec version: 0.20170106.0
 * Contact: team@appveyor.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using Refit;
using Itofinity.Appveyor.Rest.Refit.Client;
using Itofinity.Appveyor.Rest.Refit.Model;

namespace Itofinity.Appveyor.Rest.Refit.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBuildApi
    {
        #region Asynchronous Operations

        /// <summary>
        /// Cancel build
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Itofinity.Appveyor.Rest.Refit.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountName">AppVeyor account name (&#x60;accountName&#x60; property of &#x60;UserAccount&#x60;)</param>
        /// <param name="projectSlug">Project Slug</param>
        /// <param name="buildVersion">Build Version (&#x60;version&#x60; property of &#x60;Build&#x60;)</param>
        /// <returns>Task of void</returns>
        [Delete("/builds/{accountName}/{projectSlug}/{buildVersion}")]
        System.Threading.Tasks.Task CancelBuild([Header("UserAgent")] string userAgent, [AliasAs("accountName")]string accountName, [AliasAs("projectSlug")]string projectSlug, [AliasAs("buildVersion")]string buildVersion);

        /// <summary>
        /// Download build log
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Itofinity.Appveyor.Rest.Refit.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobId">Build ID (&#x60;jobId&#x60; property of &#x60;BuildJob&#x60;)</param>
        /// <returns>Task of System.IO.Stream</returns>
        [Get("/buildjobs/{jobId}/log")]
        System.Threading.Tasks.Task<System.IO.Stream> GetBuildLog([Header("UserAgent")] string userAgent, [AliasAs("jobId")]string jobId);

        /// <summary>
        /// Start build of branch most recent commit
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Itofinity.Appveyor.Rest.Refit.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <returns>Task of Build</returns>
        [Post("/builds")]
        System.Threading.Tasks.Task<Build> StartBuild([Header("UserAgent")] string userAgent, [Body]BuildStartRequest body);
        #endregion Asynchronous Operations
    }
}
